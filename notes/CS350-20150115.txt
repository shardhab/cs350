1 + 3 + 5 + 7 + ... + 999 = sum_{i=1}^(500) (2i - 1) 
= sum_{i = 1}^{500) 2i - sum_{i = 1}^{500} 1
= 2 * sum_{i = 1}^{500} i - 500
= 2 * 500 * 502/ 2 - 500 = (501 - 1) * 500 = 
= 500 * 500 = 250000

2 + 4 + 8 + 16 + ... + 1024
= sum_(i=1)^(log(n))2^i 
= sum_(i=0)^(10)2^i - 1
= 2^11 - 1 - 1 = 2^11 -2 = 2046 

Substitution to make sums simpler: 
sum_(j=1)^(n) 3^(j+1) = sum_(k=2)^(n+1) 3^k

sum_(i=0)^(n-1) i(i+1) = sum_(i=0)^(n-1) i^2 + i

sum_(i=1)^(n) 1/(i(i+1)) = sum_(i=1)^n (1/i - 1/(i + 1))
= sum_(i=1)^n 1/i - sum_(i=2)^(n+1) 1/i
= 1/1 - 1/(n+1)

sum_(i = 1)^n (i+1)2^(i-1)
= sum i 2^(i-1) + sum 2^(i-1)
= (1/2) sum i 2^i + sum_j=0^(n-1) 2^j
= Theta(n 2^n) + Theta(2^n)

The difference between a iterative and recursive analysis is
that you need to set up a recurrence relation. Backwards substitution
does not always work.

Solve the recurrence relation:
x(n) = x(n-1) + 5 for n > 1
x(1) = 0

Come up with a closed form formula for the equation.

replace n by n-1 ->
x(n-1) = x(n-2) + 5

Substitute for x(n-1):
x(n) = x(n-2) + 5 + 5

Substitute for x(n-2):
=x(n-3) + 5 + 5 + 5

Generalize:
= x(n - i) + 5i for all i < n

Substitute i = n - 1:

x(n - (n - 1)) + 5(n-1)
= 5(n-1)

x(n) = x(n-1) + n for n > 0
x(0) = 0

Substitute n by n-1 ->
x(n-1) = x(n-2) + (n - 1)
x(n) = x(n-2) + (n-1) + n
     = x(n-3) + (n-2) + (n-1) + n

Generalize:
    = x(n-i) + sum_(j=i-1)^0 n-j 
put n = i
    = x(0) + sum_(j=n-1)^0 (n-j)
    = 0 + (n+1)n / 2

Substitute n-1 for n-2 ->
= x(n - 3) + n - 2 + n - 1 + n 

= x(n - i) + i - 2





